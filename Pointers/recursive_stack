#include <iostream>
#include <cstring>
using namespace std;

typedef struct Element* uka;

struct Element
{
    int number;
    uka next;
};

void recursive_print(uka start) {
    uka copie = start;
    if (copie != nullptr) {
        recursive_print(copie->next);
        cout << copie->number << " ";
    }
    
}

uka prior = NULL;
void narlin(int number){
    uka raz = prior;
    uka ins = nullptr;
    uka p = new Element();
    p->number = number;
    p->next = NULL;

    if (prior == NULL) {
        prior = p;
    }
    else {
        while (raz != NULL && raz->number < number)
        {
            ins = raz;
            raz = raz->next;
        }
        if (ins == nullptr)
        {
            p->next = prior;
            prior = p;
        }
        else
        {
            ins->next = p;
            p->next = raz;
        }
    }
}

void delete_list(uka start)
{
    uka current = start;
    while (current != nullptr)
    {
        uka temp = current;
        current = current->next;
        delete temp;
    }
}

int main()
{
    uka na = nullptr;
    uka help = nullptr;
    char command;
    cout << "Enter a number between 0 - 9, otherwise the program will stop: ";
    cin >> command;

    while (isdigit(command))
    {
        help = new Element();
        help->number = command - '0';
        help->next = na;
        na = help;
        cout << "Enter a number between 0 - 9, otherwise the program will stop: ";
        cin >> command;
    }
   
    help = na;
    cout << "Razpechatka po napravlenie na ukazatelite " << endl;
    while (help != nullptr)
    {
        //filled in on the ordered sheet (prior)
        narlin(help->number);
        cout << help->number << " ";
        help = help->next;
    }
    cout << endl;

    cout << "Recursivna razpechatka obratno na ukazatelite " << endl;
    recursive_print(na);
    cout << endl;

    help = prior;
    cout << "Razpechatka na naredeniq spisyk " << endl;
    while (help != nullptr)
    {
        cout << help->number << " ";
        help = help->next;
    }

    return 0;
}
